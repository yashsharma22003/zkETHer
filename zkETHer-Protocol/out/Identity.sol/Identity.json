{"abi":[{"type":"constructor","inputs":[{"name":"initialManagementKey","type":"address","internalType":"address"},{"name":"_isLibrary","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"addClaim","inputs":[{"name":"_topic","type":"uint256","internalType":"uint256"},{"name":"_scheme","type":"uint256","internalType":"uint256"},{"name":"_issuer","type":"address","internalType":"address"},{"name":"_signature","type":"bytes","internalType":"bytes"},{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_uri","type":"string","internalType":"string"}],"outputs":[{"name":"claimRequestId","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"addKey","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"},{"name":"_purpose","type":"uint256","internalType":"uint256"},{"name":"_type","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"approve","inputs":[{"name":"_id","type":"uint256","internalType":"uint256"},{"name":"_approve","type":"bool","internalType":"bool"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"execute","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_value","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"executionId","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"getClaim","inputs":[{"name":"_claimId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"topic","type":"uint256","internalType":"uint256"},{"name":"scheme","type":"uint256","internalType":"uint256"},{"name":"issuer","type":"address","internalType":"address"},{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"uri","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getClaimIdsByTopic","inputs":[{"name":"_topic","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"claimIds","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getKey","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"purposes","type":"uint256[]","internalType":"uint256[]"},{"name":"keyType","type":"uint256","internalType":"uint256"},{"name":"key","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getKeyPurposes","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"_purposes","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getKeysByPurpose","inputs":[{"name":"_purpose","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keys","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getRecoveredAddress","inputs":[{"name":"sig","type":"bytes","internalType":"bytes"},{"name":"dataHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"addr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"initialize","inputs":[{"name":"initialManagementKey","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isClaimValid","inputs":[{"name":"_identity","type":"address","internalType":"contract IIdentity"},{"name":"claimTopic","type":"uint256","internalType":"uint256"},{"name":"sig","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"claimValid","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyHasPurpose","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"},{"name":"_purpose","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeClaim","inputs":[{"name":"_claimId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeKey","inputs":[{"name":"_key","type":"bytes32","internalType":"bytes32"},{"name":"_purpose","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"event","name":"Approved","inputs":[{"name":"executionId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"ClaimAdded","inputs":[{"name":"claimId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"topic","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"scheme","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"issuer","type":"address","indexed":true,"internalType":"address"},{"name":"signature","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"uri","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"ClaimChanged","inputs":[{"name":"claimId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"topic","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"scheme","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"issuer","type":"address","indexed":true,"internalType":"address"},{"name":"signature","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"uri","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"ClaimRemoved","inputs":[{"name":"claimId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"topic","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"scheme","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"issuer","type":"address","indexed":true,"internalType":"address"},{"name":"signature","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"uri","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"Executed","inputs":[{"name":"executionId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ExecutionFailed","inputs":[{"name":"executionId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ExecutionRequested","inputs":[{"name":"executionId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"KeyAdded","inputs":[{"name":"key","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"purpose","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"keyType","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"KeyRemoved","inputs":[{"name":"key","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"purpose","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"keyType","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x608034620002d1576001600160401b0390620029ea90601f38839003908101601f191682019084821183831017620002185780839160409586948552833981010312620002d15780516001600160a01b03811690819003620002d15760208092015191821592831503620002d15761ffff19928360065416908160065583156200028d57156200027a57506006549260ff9384811615801562000270575b156200022c5716610101176006558351818101928352818152928385019286841185851017620002185783865284519020925f9684885260606001968786528660028a8c20015501908282109082111762000204578652848152838752848352858720908154868355808710620001da575b5090875282872085885b818110620001c557505050505081855282808587200155828552600281528385209081549168010000000000000000831015620001b1578483018082558310156200019d577f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e99287928592879899528320015580a45b516127149081620002d68239f35b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b87526041600452602487fd5b85858551169401938184015501869062000119565b8289528680868b2092830192015b828110620001f85750506200010f565b8a8155018790620001e8565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b5f52604160045260245ffd5b855162461bcd60e51b815260048101849052601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b50303b156200009d565b925050506001919250176006556200018f565b855162461bcd60e51b815260048101849052601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806312aaac70146101145780631d3812401461010f5780634eee424a1461010a57806353d413c51461010557806354fd4d5014610100578063747442d3146100fb57806380e9e9e1146100f65780639010f726146100f1578063b1a34e0d146100ec578063b61d27f6146100e7578063c0969a6e146100e2578063c3b129e3146100dd578063c4d66de8146100d8578063c9100bcb146100d3578063d202158d146100ce5763fb307b34146100c9575f80fd5b6111ed565b6111cc565b61112f565b610f39565b610ee9565b610e82565b610ccc565b610c29565b610ab0565b610a3f565b6109bb565b610954565b610667565b6103c6565b6101a9565b61014c565b9081518082526020808093019301915f5b828110610138575050505090565b83518552938101939281019260010161012a565b346101a55760203660031901126101a5576004355f52600160205261019660405f20600181015461018160028301549261144d565b91604051938493606085526060850190610119565b91602084015260408301520390f35b5f80fd5b346101a55760603660031901126101a5576004803590602435604435916001906101de8260ff60065460081c1615151461122b565b3033148015610398575b6101f190611499565b83856002610207825f52600160205260405f2090565b0154036103405750610229610224865f52600160205260405f2090565b61144d565b5f835b61029b575b505050506102508161024b855f52600160205260405f2090565b6115a9565b6102668361024b835f52600260205260405f2090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a460018152602090f35b0390f35b815181101561033b57846102af828461157b565b51146102c4576102be90611429565b8361022c565b6103378360405191829162461bcd60e51b8352820160809060208152602160208201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f7360408201527f650000000000000000000000000000000000000000000000000000000000000060608201520190565b0390fd5b610231565b919050846002610358825f52600160205260405f2090565b015561037f610365610b99565b84815261037a875f52600160205260405f2090565b611532565b610391855f52600160205260405f2090565b0155610250565b506101f16103bf6040516020810190338252602081526103b781610b5b565b5190206122bf565b90506101e8565b346101a55760203660031901126101a55760043560016103f18160ff60065460081c1615151461122b565b3033148015610639575b6104049061206e565b610416825f52600460205260405f2090565b549081156105ce575f81610432845f52600560205260405f2090565b54905b61058b575b9161049a849261049461047c61047261057f999761046c61046661057a9b5f52600560205260405f2090565b91611cf2565b90611594565b90549060031b1c90565b9161048f865f52600560205260405f2090565b611594565b906112d4565b6104b46104af835f52600560205260405f2090565b611d7a565b6104c6835f52600460205260405f2090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6001600160a01b03610518600261050a855f52600460205260405f2090565b01546001600160a01b031690565b610569600361052f865f52600460205260405f2090565b016004610544875f52600460205260405f2090565b016005610559885f52600460205260405f2090565b01916040519586951699856121b1565b0390a45f52600460205260405f2090565b612235565b60405160018152602090f35b90846105a66104728361048f885f52600560205260405f2090565b146105c8576105b490611429565b90808210156105c35782610435565b61043a565b9061043a565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201527f69746820746869732049440000000000000000000000000000000000000000006064820152608490fd5b5061040461066060405160208101903382526020815261065881610b5b565b519020612356565b90506103fb565b346101a5576040806003193601126101a55760048035916024359060016106998160ff60065460081c1615151461122b565b30331480156108f1575b6106ac90611499565b6106cc8560026106c4825f52600160205260405f2090565b015414611c81565b806106e2610224875f52600160205260405f2090565b945f915b61084f575b5061070a6107026106fc8751611cf2565b8761157b565b51918661157b565b5261072684610721875f52600160205260405f2090565b611d00565b61073b6104af865f52600160205260405f2090565b805f61074f855f52600260205260405f2090565b54925b610814575b6107909061049461077d6104726107c09661046c6104668b5f52600260205260405f2090565b9161048f885f52600260205260405f2090565b6107a56104af855f52600260205260405f2090565b6107b7865f52600160205260405f2090565b01549351611cf2565b156107f5575b51927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d33975f80a460018152602090f35b61080f61080a855f52600160205260405f2090565b611db7565b6107c6565b8661082e6104728361048f895f52600260205260405f2090565b1461084a5761083c90611429565b8281101561084a5781610752565b610757565b908461085b828861157b565b51146108eb5761086a90611429565b908186511461087957826106e6565b61033790845191829162461bcd60e51b8352820160809060208152602a60208201527f4e6f6e4578697374696e673a204b657920646f65736e2774206861766520737560408201527f636820707572706f73650000000000000000000000000000000000000000000060608201520190565b906106eb565b506106ac61090f83516020810190338252602081526103b781610b5b565b90506106a3565b91908251928382525f5b848110610940575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610920565b346101a5575f3660031901126101a55761029760405161097381610b5b565b600581527f322e322e310000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610916565b801515036101a557565b346101a55760403660031901126101a55760206109fb6024356109dd816109b1565b6109f3600160ff60065460081c1615151461122b565b600435611b70565b6040519015158152f35b602090816040818301928281528551809452019301915f5b828110610a2b575050505090565b835185529381019392810192600101610a1d565b346101a5576020806003193601126101a5576004355f526005815260405f209060405190818184549182815201935f52815f20915f905b828210610a995761029785610a8d81890382610b77565b60405191829182610a05565b835486529485019460019384019390910190610a76565b346101a5576020806003193601126101a5576004355f526002815260405f209060405190818184549182815201935f52815f20915f905b828210610afe5761029785610a8d81890382610b77565b835486529485019460019384019390910190610ae7565b6001600160a01b038116036101a557565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff821117610b5657604052565b610b26565b6040810190811067ffffffffffffffff821117610b5657604052565b90601f8019910116810190811067ffffffffffffffff821117610b5657604052565b604051906020820182811067ffffffffffffffff821117610b5657604052565b67ffffffffffffffff8111610b5657601f01601f191660200190565b929192610be182610bb9565b91610bef6040519384610b77565b8294818452818301116101a5578281602093845f960137010152565b9080601f830112156101a557816020610c2693359101610bd5565b90565b346101a55760c03660031901126101a557604435610c4681610b15565b67ffffffffffffffff6064358181116101a557610c67903690600401610c0b565b916084358281116101a557610c80903690600401610c0b565b60a4359283116101a557366023840112156101a55761029793610cb0610cbc943690602481600401359101610bd5565b92602435600435611dea565b6040519081529081906020820190565b60603660031901126101a557600435610ce481610b15565b6024359060443567ffffffffffffffff81116101a557610297926001600160a01b0392610d18610de4933690600401610c0b565b90610d2f600160ff60065460081c1615151461122b565b7f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee85f549582610d938894610d6b865f52600360205260405f2090565b906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b856001610da8865f52600360205260405f2090565b0155610dc8856002610dc2875f52600360205260405f2090565b0161134c565b610dd25f54611429565b5f55169485936040519182918261143c565b0390a4604080513360208083019182528252601f199392610e0a92906103b79082610b77565b15610e2b575050610e1a816115e6565b506040519081529081906020820190565b3014159081610e4a575b5015610cbc57610e44816115e6565b50610cbc565b604080513360208201908152610e7c9450929091610e749190839081015b03908101835282610b77565b5190206123e3565b5f610e35565b346101a55760803660031901126101a557600435610e9f81610b15565b67ffffffffffffffff6044358181116101a557610ec0903690600401610c0b565b916064359182116101a557602092610edf6109fb933690600401610c0b565b9160243590612513565b346101a55760403660031901126101a55760043567ffffffffffffffff81116101a557610f28610f1f6020923690600401610c0b565b602435906125e7565b6001600160a01b0360405191168152f35b346101a55760203660031901126101a557600435610f5681610b15565b6001600160a01b0381161561109957600654600191829160ff16158015611090575b610f819061265b565b610f93600160ff196006541617600655565b610fa761010061ff00196006541617600655565b604051610fda81610fcc6020820194859190916001600160a01b036020820193169052565b03601f198101835282610b77565b519020806002610ff2825f52600160205260405f2090565b015561101a610fff610b99565b60018152611015835f52600160205260405f2090565b6126a6565b61103782611030835f52600160205260405f2090565b0160019055565b60015f52600260205261106a817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e06115a9565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a4005b50303b15610f78565b606460405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152fd5b9491936001600160a01b0361112194610c269896611113948952602089015216604087015260c0606087015260c0860190610916565b908482036080860152610916565b9160a0818403910152610916565b346101a55760203660031901126101a557600435805f52600460205260405f209061029782549160046001850154946111bf60056111836001600160a01b03600285015416955f52600460205260405f2090565b016111ba604051936111a38561119c816003850161182b565b0386610b77565b6111b3604051809781930161182b565b0385610b77565b6122a4565b92604051968796876110dd565b346101a55760403660031901126101a55760206109fb602435600435612482565b346101a55760203660031901126101a5576004355f52600160205261029761121760405f2061144d565b604051918291602083526020830190610119565b1561123257565b608460405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e60448201527f747261637420697320666f7262696464656e2e000000000000000000000000006064820152fd5b90600182811c921680156112ca575b60208310146112b657565b634e487b7160e01b5f52602260045260245ffd5b91607f16916112ab565b916112ed9183549060031b91821b915f19901b19161790565b9055565b8181106112fc575050565b5f81556001016112f1565b9190601f811161131657505050565b611340925f5260205f20906020601f840160051c83019310611342575b601f0160051c01906112f1565b565b9091508190611333565b919091825167ffffffffffffffff8111610b56576113748161136e845461129c565b84611307565b602080601f83116001146113ae5750819293945f926113a3575b50508160011b915f199060031b1c1916179055565b015190505f8061138e565b90601f198316956113c2855f5260205f2090565b925f905b8882106113fd575050836001959697106113e5575b505050811b019055565b01515f1960f88460031b161c191690555f80806113db565b806001859682949686015181550195019301906113c6565b634e487b7160e01b5f52601160045260245ffd5b5f1981146114375760010190565b611415565b906020610c26928181520190610916565b906040519182815491828252602092838301915f52835f20935f905b82821061147f5750505061134092500383610b77565b855484526001958601958895509381019390910190611469565b156114a057565b608460405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201527f65206d616e6167656d656e74206b6579000000000000000000000000000000006064820152fd5b8054600182558060011061151c575050565b611340915f52600160205f2091820191016112f1565b9061153c8261150a565b905f52602090815f205f5b600181106115555750505050565b82518282015591830191600101611547565b634e487b7160e01b5f52603260045260245ffd5b805182101561158f5760209160051b010190565b611567565b805482101561158f575f5260205f2001905f90565b80549068010000000000000000821015610b5657816115d09160016112ed94018155611594565b819391549060031b91821b915f19901b19161790565b610c2690611600600160ff60065460081c1615151461122b565b6118cc565b1561160c57565b608460405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201527f65637574696f6e000000000000000000000000000000000000000000000000006064820152fd5b1561167d57565b606460405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152fd5b156116c857565b606460405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152fd5b1561171357565b608460405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742060448201527f6b657900000000000000000000000000000000000000000000000000000000006064820152fd5b5f9291815461178b8161129c565b926001918083169081156117e157506001146117a8575b50505050565b9091929394505f52602090815f20905f915b8583106117d0575050505001905f8080806117a2565b8054858401529183019181016117ba565b60ff191684525050508115159091020191505f8080806117a2565b3d15611826573d9061180d82610bb9565b9161181b6040519384610b77565b82523d5f602084013e565b606090565b905f929180549161183b8361129c565b9182825260019384811690815f14611898575060011461185b5750505050565b90919394505f52602092835f2092845f945b83861061188457505050500101905f8080806117a2565b80548587018301529401938590820161186d565b9294505050602093945060ff191683830152151560051b0101905f8080806117a2565b906020610c2692818152019061182b565b6118d85f548210611605565b61190961190461190060036118f5855f52600360205260405f2090565b015460081c60ff1690565b1590565b611676565b61192b61191e825f52600360205260405f2090565b546001600160a01b031690565b6001600160a01b03919082163003611b44576040805133602082019081526119649261195f92906103b79082908101610fcc565b61170c565b807fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d86040518061199981906001602083019252565b0390a26119c160036119b3835f52600360205260405f2090565b01805460ff19166001179055565b5f806119d861191e845f52600360205260405f2090565b611a1260016119ef865f52600360205260405f2090565b01546002611a05875f52600360205260405f2090565b016040519283809261177d565b03925af1611a1e6117fc565b5015611ac857611a4b6003611a3b835f52600360205260405f2090565b01805461ff001916610100179055565b611a6061191e825f52600360205260405f2090565b907f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b86001611a96835f52600360205260405f2090565b0154936002611aad845f52600360205260405f2090565b0193611ac06040519283921695826118bb565b0390a4600190565b611add61191e825f52600360205260405f2090565b907fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a686001611b13835f52600360205260405f2090565b0154936002611b2a845f52600360205260405f2090565b0193611b3d6040519283921695826118bb565b0390a45f90565b604080513360208201908152611b6b92611b669290610e749082908101610fcc565b6116c1565b611964565b611b7c5f548210611605565b611b9961190461190060036118f5855f52600360205260405f2090565b6001611bb061191e835f52600360205260405f2090565b6001600160a01b03939084163003611c5a57604080513360208201908152611be49261195f92906103b79082908101610fcc565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c32576119c160036119b3835f52600360205260405f2090565b611c569150611c4b6003915f52600360205260405f2090565b01805460ff19169055565b5f90565b604080513360208201908152611c7c92611b669290610e749082908101610fcc565b611be4565b15611c8857565b608460405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e27742072656769737465726560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152fd5b5f1981019190821161143757565b81519167ffffffffffffffff8311610b5657680100000000000000008311610b56578154838355808410611d5e575b506020809101915f52805f20905f5b848110611d4c575050505050565b83518382015592810192600101611d3e565b611d7490835f528460205f2091820191016112f1565b5f611d2f565b8054908115611da3575f1991820191611d938383611594565b909182549160031b1b1916905555565b634e487b7160e01b5f52603160045260245ffd5b60025f91805483825580611dd1575b508260018201550155565b81845260208420611de4918101906112f1565b5f611dc6565b9294909394611e05600160ff60065460081c1615151461122b565b3033148015612048575b611e189061206e565b6001600160a01b03831694308603611fba575b604080516001600160a01b03861660208201908152918101879052611e538160608101610fcc565b51902096879486611e6c875f52600460205260405f2090565b55826001611e82885f52600460205260405f2090565b0155611e9c846003610dc2895f52600460205260405f2090565b611eb4826004610dc2895f52600460205260405f2090565b611ecc856005610dc2895f52600460205260405f2090565b87611ef3611ee7600261050a8a5f52600460205260405f2090565b6001600160a01b031690565b14611f875793611f8191611f757f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611f388961024b8c5f52600560205260405f2090565b6002611f4c8a5f52600460205260405f2090565b01906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b60405194859485612183565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611f819160405194859485612183565b6040517fc0969a6e00000000000000000000000000000000000000000000000000000000815260208180611ff48b878b30600486016120f4565b03818a5afa801561204357612010915f91612015575b50612138565b611e2b565b612036915060203d811161203c575b61202e8183610b77565b8101906120df565b5f61200a565b503d612024565b61212d565b50611e1861206760405160208101903382526020815261065881610b5b565b9050611e0f565b1561207557565b608460405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201527f6520636c61696d207369676e6572206b657900000000000000000000000000006064820152fd5b908160209103126101a55751610c26816109b1565b92610c2694926001600160a01b0361211f931685526020850152608060408501526080840190610916565b916060818403910152610916565b6040513d5f823e3d90fd5b1561213f57565b606460405162461bcd60e51b815260206004820152600d60248201527f696e76616c696420636c61696d000000000000000000000000000000000000006044820152fd5b926121a3610c26959361211f938652608060208701526080860190610916565b908482036040860152610916565b926121d1610c2695936121df93865260806020870152608086019061182b565b90848203604086015261182b565b91606081840391015261182b565b6121f7815461129c565b9081612201575050565b81601f5f9311600114612212575055565b908083918252612231601f60208420940160051c8401600185016112f1565b5555565b60055f91828155826001820155826002820155612254600382016121ed565b612260600482016121ed565b0161226b815461129c565b8061227557505050565b82601f821160011461228657505055565b9091808252612231601f60208420940160051c8401600185016112f1565b906113406122b8926040519384809261182b565b0383610b77565b5f5260018060205260405f206002604051916122da83610b3a565b6122e38161144d565b8352838101546020840152015480604083015215612350575f90825b61230b575b5050505f90565b805191825181101561234a578361232382829561157b565b51148015612345575b61233f5761233990611429565b916122ff565b50505090565b61232c565b50612304565b50505f90565b5f5260018060205260405f2060026040519161237183610b3a565b61237a8161144d565b8352838101546020840152015480604083015215612350575f90825b6123a1575050505f90565b805191825181101561234a576123b881859461157b565b518381149081156123d8575b5061233f576123d290611429565b91612396565b60039150145f6123c4565b5f5260018060205260405f20604051906123fc82610b3a565b6124058161144d565b825282810154602083015260028091015480604084015215612304575f91835b612432575b505050505f90565b805192835181101561247c5761244981869561157b565b5183858214918215612472575b505061246b5761246590611429565b92612425565b5050505090565b149050835f612456565b5061242a565b5f526001908160205260405f209060026040519261249f84610b3a565b6124a88161144d565b8452848101546020850152015480604084015215612304575f91835b6124d057505050505f90565b805192835181101561247c576124e781869561157b565b5183858214918215612509575b505061246b5761250390611429565b926124c4565b149050835f6124f4565b916125da93926125b69261254b6040519586926001600160a01b03602085019516855260408401526060808401526080830190610916565b039361255f601f1995868101835282610b77565b5190206040516125ad816125a1602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b03868101835282610b77565b519020906125e7565b604080516001600160a01b0390921660208301908152926106589183908101610e68565b6125e2575f90565b600190565b905f60418351036126555760208301519060606040850151940151901a601b811061263e575b9160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612043575f5190565b601b90929192019060ff821161143757919061260d565b91505090565b1561266257565b606460405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152fd5b906126b08261150a565b905f52602090815f205f5b600181106126c95750505050565b825160ff1682820155918301916001016126bb56fea2646970667358221220e6ff6de2b2eb536d1747cc17f6b33f2e591b034edf6ea0b5a625819b784af1d364736f6c63430008140033","sourceMap":"481:20431:31:-:0;;;;-1:-1:-1;;;;;481:20431:31;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;787:5:36;481:20431:31;;;;787:5:36;481:20431:31;1772:34;;481:20431;;;;;;787:5:36;481:20431:31;;;;;;;20112:13;481:20431;;20112:33;;1853:129;481:20431;;;;;;787:5:36;481:20431:31;;;20274:32;;;481:20431;;;20274:32;;;481:20431;;;;;;;;;;;;;;;;;;;20264:43;;-1:-1:-1;;481:20431:31;;;;;;;;;;;20317:15;481:20431;;;20317:15;481:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1853:129;481:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;20385:19;481:20431;;;;20317:15;481:20431;;;;;;;;;;;;;;;;;;;;;;;;;;20461:20;481:20431;;;;;;;;;;;;;20461:20;;1853:129;481:20431;;;;;;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;20112:33;20753:4;;20844:36;20896:7;20112:33;;1853:129;481:20431;;;;;;;;;787:5:36;481:20431:31;1853:129;;481:20431;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c806312aaac70146101145780631d3812401461010f5780634eee424a1461010a57806353d413c51461010557806354fd4d5014610100578063747442d3146100fb57806380e9e9e1146100f65780639010f726146100f1578063b1a34e0d146100ec578063b61d27f6146100e7578063c0969a6e146100e2578063c3b129e3146100dd578063c4d66de8146100d8578063c9100bcb146100d3578063d202158d146100ce5763fb307b34146100c9575f80fd5b6111ed565b6111cc565b61112f565b610f39565b610ee9565b610e82565b610ccc565b610c29565b610ab0565b610a3f565b6109bb565b610954565b610667565b6103c6565b6101a9565b61014c565b9081518082526020808093019301915f5b828110610138575050505090565b83518552938101939281019260010161012a565b346101a55760203660031901126101a5576004355f52600160205261019660405f20600181015461018160028301549261144d565b91604051938493606085526060850190610119565b91602084015260408301520390f35b5f80fd5b346101a55760603660031901126101a5576004803590602435604435916001906101de8260ff60065460081c1615151461122b565b3033148015610398575b6101f190611499565b83856002610207825f52600160205260405f2090565b0154036103405750610229610224865f52600160205260405f2090565b61144d565b5f835b61029b575b505050506102508161024b855f52600160205260405f2090565b6115a9565b6102668361024b835f52600260205260405f2090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a460018152602090f35b0390f35b815181101561033b57846102af828461157b565b51146102c4576102be90611429565b8361022c565b6103378360405191829162461bcd60e51b8352820160809060208152602160208201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f7360408201527f650000000000000000000000000000000000000000000000000000000000000060608201520190565b0390fd5b610231565b919050846002610358825f52600160205260405f2090565b015561037f610365610b99565b84815261037a875f52600160205260405f2090565b611532565b610391855f52600160205260405f2090565b0155610250565b506101f16103bf6040516020810190338252602081526103b781610b5b565b5190206122bf565b90506101e8565b346101a55760203660031901126101a55760043560016103f18160ff60065460081c1615151461122b565b3033148015610639575b6104049061206e565b610416825f52600460205260405f2090565b549081156105ce575f81610432845f52600560205260405f2090565b54905b61058b575b9161049a849261049461047c61047261057f999761046c61046661057a9b5f52600560205260405f2090565b91611cf2565b90611594565b90549060031b1c90565b9161048f865f52600560205260405f2090565b611594565b906112d4565b6104b46104af835f52600560205260405f2090565b611d7a565b6104c6835f52600460205260405f2090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6001600160a01b03610518600261050a855f52600460205260405f2090565b01546001600160a01b031690565b610569600361052f865f52600460205260405f2090565b016004610544875f52600460205260405f2090565b016005610559885f52600460205260405f2090565b01916040519586951699856121b1565b0390a45f52600460205260405f2090565b612235565b60405160018152602090f35b90846105a66104728361048f885f52600560205260405f2090565b146105c8576105b490611429565b90808210156105c35782610435565b61043a565b9061043a565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201527f69746820746869732049440000000000000000000000000000000000000000006064820152608490fd5b5061040461066060405160208101903382526020815261065881610b5b565b519020612356565b90506103fb565b346101a5576040806003193601126101a55760048035916024359060016106998160ff60065460081c1615151461122b565b30331480156108f1575b6106ac90611499565b6106cc8560026106c4825f52600160205260405f2090565b015414611c81565b806106e2610224875f52600160205260405f2090565b945f915b61084f575b5061070a6107026106fc8751611cf2565b8761157b565b51918661157b565b5261072684610721875f52600160205260405f2090565b611d00565b61073b6104af865f52600160205260405f2090565b805f61074f855f52600260205260405f2090565b54925b610814575b6107909061049461077d6104726107c09661046c6104668b5f52600260205260405f2090565b9161048f885f52600260205260405f2090565b6107a56104af855f52600260205260405f2090565b6107b7865f52600160205260405f2090565b01549351611cf2565b156107f5575b51927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d33975f80a460018152602090f35b61080f61080a855f52600160205260405f2090565b611db7565b6107c6565b8661082e6104728361048f895f52600260205260405f2090565b1461084a5761083c90611429565b8281101561084a5781610752565b610757565b908461085b828861157b565b51146108eb5761086a90611429565b908186511461087957826106e6565b61033790845191829162461bcd60e51b8352820160809060208152602a60208201527f4e6f6e4578697374696e673a204b657920646f65736e2774206861766520737560408201527f636820707572706f73650000000000000000000000000000000000000000000060608201520190565b906106eb565b506106ac61090f83516020810190338252602081526103b781610b5b565b90506106a3565b91908251928382525f5b848110610940575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610920565b346101a5575f3660031901126101a55761029760405161097381610b5b565b600581527f322e322e310000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610916565b801515036101a557565b346101a55760403660031901126101a55760206109fb6024356109dd816109b1565b6109f3600160ff60065460081c1615151461122b565b600435611b70565b6040519015158152f35b602090816040818301928281528551809452019301915f5b828110610a2b575050505090565b835185529381019392810192600101610a1d565b346101a5576020806003193601126101a5576004355f526005815260405f209060405190818184549182815201935f52815f20915f905b828210610a995761029785610a8d81890382610b77565b60405191829182610a05565b835486529485019460019384019390910190610a76565b346101a5576020806003193601126101a5576004355f526002815260405f209060405190818184549182815201935f52815f20915f905b828210610afe5761029785610a8d81890382610b77565b835486529485019460019384019390910190610ae7565b6001600160a01b038116036101a557565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff821117610b5657604052565b610b26565b6040810190811067ffffffffffffffff821117610b5657604052565b90601f8019910116810190811067ffffffffffffffff821117610b5657604052565b604051906020820182811067ffffffffffffffff821117610b5657604052565b67ffffffffffffffff8111610b5657601f01601f191660200190565b929192610be182610bb9565b91610bef6040519384610b77565b8294818452818301116101a5578281602093845f960137010152565b9080601f830112156101a557816020610c2693359101610bd5565b90565b346101a55760c03660031901126101a557604435610c4681610b15565b67ffffffffffffffff6064358181116101a557610c67903690600401610c0b565b916084358281116101a557610c80903690600401610c0b565b60a4359283116101a557366023840112156101a55761029793610cb0610cbc943690602481600401359101610bd5565b92602435600435611dea565b6040519081529081906020820190565b60603660031901126101a557600435610ce481610b15565b6024359060443567ffffffffffffffff81116101a557610297926001600160a01b0392610d18610de4933690600401610c0b565b90610d2f600160ff60065460081c1615151461122b565b7f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee85f549582610d938894610d6b865f52600360205260405f2090565b906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b856001610da8865f52600360205260405f2090565b0155610dc8856002610dc2875f52600360205260405f2090565b0161134c565b610dd25f54611429565b5f55169485936040519182918261143c565b0390a4604080513360208083019182528252601f199392610e0a92906103b79082610b77565b15610e2b575050610e1a816115e6565b506040519081529081906020820190565b3014159081610e4a575b5015610cbc57610e44816115e6565b50610cbc565b604080513360208201908152610e7c9450929091610e749190839081015b03908101835282610b77565b5190206123e3565b5f610e35565b346101a55760803660031901126101a557600435610e9f81610b15565b67ffffffffffffffff6044358181116101a557610ec0903690600401610c0b565b916064359182116101a557602092610edf6109fb933690600401610c0b565b9160243590612513565b346101a55760403660031901126101a55760043567ffffffffffffffff81116101a557610f28610f1f6020923690600401610c0b565b602435906125e7565b6001600160a01b0360405191168152f35b346101a55760203660031901126101a557600435610f5681610b15565b6001600160a01b0381161561109957600654600191829160ff16158015611090575b610f819061265b565b610f93600160ff196006541617600655565b610fa761010061ff00196006541617600655565b604051610fda81610fcc6020820194859190916001600160a01b036020820193169052565b03601f198101835282610b77565b519020806002610ff2825f52600160205260405f2090565b015561101a610fff610b99565b60018152611015835f52600160205260405f2090565b6126a6565b61103782611030835f52600160205260405f2090565b0160019055565b60015f52600260205261106a817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e06115a9565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a4005b50303b15610f78565b606460405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152fd5b9491936001600160a01b0361112194610c269896611113948952602089015216604087015260c0606087015260c0860190610916565b908482036080860152610916565b9160a0818403910152610916565b346101a55760203660031901126101a557600435805f52600460205260405f209061029782549160046001850154946111bf60056111836001600160a01b03600285015416955f52600460205260405f2090565b016111ba604051936111a38561119c816003850161182b565b0386610b77565b6111b3604051809781930161182b565b0385610b77565b6122a4565b92604051968796876110dd565b346101a55760403660031901126101a55760206109fb602435600435612482565b346101a55760203660031901126101a5576004355f52600160205261029761121760405f2061144d565b604051918291602083526020830190610119565b1561123257565b608460405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e60448201527f747261637420697320666f7262696464656e2e000000000000000000000000006064820152fd5b90600182811c921680156112ca575b60208310146112b657565b634e487b7160e01b5f52602260045260245ffd5b91607f16916112ab565b916112ed9183549060031b91821b915f19901b19161790565b9055565b8181106112fc575050565b5f81556001016112f1565b9190601f811161131657505050565b611340925f5260205f20906020601f840160051c83019310611342575b601f0160051c01906112f1565b565b9091508190611333565b919091825167ffffffffffffffff8111610b56576113748161136e845461129c565b84611307565b602080601f83116001146113ae5750819293945f926113a3575b50508160011b915f199060031b1c1916179055565b015190505f8061138e565b90601f198316956113c2855f5260205f2090565b925f905b8882106113fd575050836001959697106113e5575b505050811b019055565b01515f1960f88460031b161c191690555f80806113db565b806001859682949686015181550195019301906113c6565b634e487b7160e01b5f52601160045260245ffd5b5f1981146114375760010190565b611415565b906020610c26928181520190610916565b906040519182815491828252602092838301915f52835f20935f905b82821061147f5750505061134092500383610b77565b855484526001958601958895509381019390910190611469565b156114a057565b608460405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201527f65206d616e6167656d656e74206b6579000000000000000000000000000000006064820152fd5b8054600182558060011061151c575050565b611340915f52600160205f2091820191016112f1565b9061153c8261150a565b905f52602090815f205f5b600181106115555750505050565b82518282015591830191600101611547565b634e487b7160e01b5f52603260045260245ffd5b805182101561158f5760209160051b010190565b611567565b805482101561158f575f5260205f2001905f90565b80549068010000000000000000821015610b5657816115d09160016112ed94018155611594565b819391549060031b91821b915f19901b19161790565b610c2690611600600160ff60065460081c1615151461122b565b6118cc565b1561160c57565b608460405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201527f65637574696f6e000000000000000000000000000000000000000000000000006064820152fd5b1561167d57565b606460405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152fd5b156116c857565b606460405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152fd5b1561171357565b608460405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e742060448201527f6b657900000000000000000000000000000000000000000000000000000000006064820152fd5b5f9291815461178b8161129c565b926001918083169081156117e157506001146117a8575b50505050565b9091929394505f52602090815f20905f915b8583106117d0575050505001905f8080806117a2565b8054858401529183019181016117ba565b60ff191684525050508115159091020191505f8080806117a2565b3d15611826573d9061180d82610bb9565b9161181b6040519384610b77565b82523d5f602084013e565b606090565b905f929180549161183b8361129c565b9182825260019384811690815f14611898575060011461185b5750505050565b90919394505f52602092835f2092845f945b83861061188457505050500101905f8080806117a2565b80548587018301529401938590820161186d565b9294505050602093945060ff191683830152151560051b0101905f8080806117a2565b906020610c2692818152019061182b565b6118d85f548210611605565b61190961190461190060036118f5855f52600360205260405f2090565b015460081c60ff1690565b1590565b611676565b61192b61191e825f52600360205260405f2090565b546001600160a01b031690565b6001600160a01b03919082163003611b44576040805133602082019081526119649261195f92906103b79082908101610fcc565b61170c565b807fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d86040518061199981906001602083019252565b0390a26119c160036119b3835f52600360205260405f2090565b01805460ff19166001179055565b5f806119d861191e845f52600360205260405f2090565b611a1260016119ef865f52600360205260405f2090565b01546002611a05875f52600360205260405f2090565b016040519283809261177d565b03925af1611a1e6117fc565b5015611ac857611a4b6003611a3b835f52600360205260405f2090565b01805461ff001916610100179055565b611a6061191e825f52600360205260405f2090565b907f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b86001611a96835f52600360205260405f2090565b0154936002611aad845f52600360205260405f2090565b0193611ac06040519283921695826118bb565b0390a4600190565b611add61191e825f52600360205260405f2090565b907fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a686001611b13835f52600360205260405f2090565b0154936002611b2a845f52600360205260405f2090565b0193611b3d6040519283921695826118bb565b0390a45f90565b604080513360208201908152611b6b92611b669290610e749082908101610fcc565b6116c1565b611964565b611b7c5f548210611605565b611b9961190461190060036118f5855f52600360205260405f2090565b6001611bb061191e835f52600360205260405f2090565b6001600160a01b03939084163003611c5a57604080513360208201908152611be49261195f92906103b79082908101610fcc565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c32576119c160036119b3835f52600360205260405f2090565b611c569150611c4b6003915f52600360205260405f2090565b01805460ff19169055565b5f90565b604080513360208201908152611c7c92611b669290610e749082908101610fcc565b611be4565b15611c8857565b608460405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e27742072656769737465726560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152fd5b5f1981019190821161143757565b81519167ffffffffffffffff8311610b5657680100000000000000008311610b56578154838355808410611d5e575b506020809101915f52805f20905f5b848110611d4c575050505050565b83518382015592810192600101611d3e565b611d7490835f528460205f2091820191016112f1565b5f611d2f565b8054908115611da3575f1991820191611d938383611594565b909182549160031b1b1916905555565b634e487b7160e01b5f52603160045260245ffd5b60025f91805483825580611dd1575b508260018201550155565b81845260208420611de4918101906112f1565b5f611dc6565b9294909394611e05600160ff60065460081c1615151461122b565b3033148015612048575b611e189061206e565b6001600160a01b03831694308603611fba575b604080516001600160a01b03861660208201908152918101879052611e538160608101610fcc565b51902096879486611e6c875f52600460205260405f2090565b55826001611e82885f52600460205260405f2090565b0155611e9c846003610dc2895f52600460205260405f2090565b611eb4826004610dc2895f52600460205260405f2090565b611ecc856005610dc2895f52600460205260405f2090565b87611ef3611ee7600261050a8a5f52600460205260405f2090565b6001600160a01b031690565b14611f875793611f8191611f757f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611f388961024b8c5f52600560205260405f2090565b6002611f4c8a5f52600460205260405f2090565b01906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b60405194859485612183565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611f819160405194859485612183565b6040517fc0969a6e00000000000000000000000000000000000000000000000000000000815260208180611ff48b878b30600486016120f4565b03818a5afa801561204357612010915f91612015575b50612138565b611e2b565b612036915060203d811161203c575b61202e8183610b77565b8101906120df565b5f61200a565b503d612024565b61212d565b50611e1861206760405160208101903382526020815261065881610b5b565b9050611e0f565b1561207557565b608460405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201527f6520636c61696d207369676e6572206b657900000000000000000000000000006064820152fd5b908160209103126101a55751610c26816109b1565b92610c2694926001600160a01b0361211f931685526020850152608060408501526080840190610916565b916060818403910152610916565b6040513d5f823e3d90fd5b1561213f57565b606460405162461bcd60e51b815260206004820152600d60248201527f696e76616c696420636c61696d000000000000000000000000000000000000006044820152fd5b926121a3610c26959361211f938652608060208701526080860190610916565b908482036040860152610916565b926121d1610c2695936121df93865260806020870152608086019061182b565b90848203604086015261182b565b91606081840391015261182b565b6121f7815461129c565b9081612201575050565b81601f5f9311600114612212575055565b908083918252612231601f60208420940160051c8401600185016112f1565b5555565b60055f91828155826001820155826002820155612254600382016121ed565b612260600482016121ed565b0161226b815461129c565b8061227557505050565b82601f821160011461228657505055565b9091808252612231601f60208420940160051c8401600185016112f1565b906113406122b8926040519384809261182b565b0383610b77565b5f5260018060205260405f206002604051916122da83610b3a565b6122e38161144d565b8352838101546020840152015480604083015215612350575f90825b61230b575b5050505f90565b805191825181101561234a578361232382829561157b565b51148015612345575b61233f5761233990611429565b916122ff565b50505090565b61232c565b50612304565b50505f90565b5f5260018060205260405f2060026040519161237183610b3a565b61237a8161144d565b8352838101546020840152015480604083015215612350575f90825b6123a1575050505f90565b805191825181101561234a576123b881859461157b565b518381149081156123d8575b5061233f576123d290611429565b91612396565b60039150145f6123c4565b5f5260018060205260405f20604051906123fc82610b3a565b6124058161144d565b825282810154602083015260028091015480604084015215612304575f91835b612432575b505050505f90565b805192835181101561247c5761244981869561157b565b5183858214918215612472575b505061246b5761246590611429565b92612425565b5050505090565b149050835f612456565b5061242a565b5f526001908160205260405f209060026040519261249f84610b3a565b6124a88161144d565b8452848101546020850152015480604084015215612304575f91835b6124d057505050505f90565b805192835181101561247c576124e781869561157b565b5183858214918215612509575b505061246b5761250390611429565b926124c4565b149050835f6124f4565b916125da93926125b69261254b6040519586926001600160a01b03602085019516855260408401526060808401526080830190610916565b039361255f601f1995868101835282610b77565b5190206040516125ad816125a1602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b03868101835282610b77565b519020906125e7565b604080516001600160a01b0390921660208301908152926106589183908101610e68565b6125e2575f90565b600190565b905f60418351036126555760208301519060606040850151940151901a601b811061263e575b9160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612043575f5190565b601b90929192019060ff821161143757919061260d565b91505090565b1561266257565b606460405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152fd5b906126b08261150a565b905f52602090815f205f5b600181106126c95750505050565b825160ff1682820155918301916001016126bb56fea2646970667358221220e6ff6de2b2eb536d1747cc17f6b33f2e591b034edf6ea0b5a625819b784af1d364736f6c63430008140033","sourceMap":"481:20431:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;-1:-1:-1;481:20431:31;4431:5;481:20431;;;;-1:-1:-1;481:20431:31;4431:5;4453:19;;481:20431;;4474:15;;;481:20431;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;;;;717:4;;481:20431;693:84;481:20431;;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;481:20431;929:152;;;:::i;:::-;7233:11;;:15;:11;;481:20431;;717:4;481:20431;;;;;;;7233:11;:15;481:20431;7233:23;;;7301:11;481:20431;7301:11;;481:20431;;717:4;481:20431;;;;;;;7301:11;481:20431;:::i;:::-;-1:-1:-1;7340:24:31;717:4;;;7335:290;7639:11;;;;:35;:11;;;481:20431;;717:4;481:20431;;;;;;;7639:11;:35;:::i;:::-;7836;:24;;;481:20431;;7233:15;481:20431;;;;;;;7836:35;481:20431;;7887:31;;-1:-1:-1;7887:31:31;;717:4;481:20431;;;;;;;;;7402:17;481:20431;;7366:34;;;;;7457:26;;;;;:::i;:::-;481:20431;7506:19;7502:109;;7402:17;;;:::i;:::-;7340:24;;;7502:109;7549:43;481:20431;;;7549:43;;;-1:-1:-1;;;7549:43:31;;;;481:20431;;;;;;;;;;;;;;;;;;;;;;;7549:43;;;;7366:34;;;7229:597;7705:11;;;;7233:15;7705:11;;481:20431;;717:4;481:20431;;;;;;;7705:11;:15;481:20431;;;;:::i;:::-;;;;7741:11;;481:20431;;717:4;481:20431;;;;;;;7741:11;481:20431;:::i;:::-;7788:11;;481:20431;;717:4;481:20431;;;;;;;7788:11;:19;481:20431;7229:597;;937:82;481:20431;929:152;968:51;481:20431;;;992:22;;937:10;;481:20431;;;992:22;;;;;:::i;:::-;481:20431;982:33;;968:51;:::i;:::-;937:82;;;;481:20431;;;;;;-1:-1:-1;;481:20431:31;;;;;;717:4;693:84;481:20431;;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;481:20431;1229:154;;;:::i;:::-;14241:17;;481:20431;;;;;;;;;;14241:17;481:20431;14278:11;;;14274:95;;-1:-1:-1;14427:22:31;;;481:20431;;14427:14;481:20431;;;;;;;14427:22;481:20431;14466:175;717:4;;;14466:175;14696:22;14651:84;14696:22;;14651:34;481:20431;14696:39;15052:24;14696:22;;14719:15;14696:22;15059:17;14696:22;481:20431;;14427:14;481:20431;;;;;;;14696:22;14719:15;;:::i;:::-;14696:39;;:::i;:::-;481:20431;;;;;;;;;14651:22;;;481:20431;;14427:14;481:20431;;;;;;;14651:22;:34;:::i;:::-;:84;;:::i;:::-;14745:26;:22;;481:20431;;14427:14;481:20431;;;;;;;14745:22;:26;:::i;:::-;14857:17;;481:20431;;;;;;;;;;14857:17;:24;481:20431;14895:17;;14789:252;-1:-1:-1;;;;;14895:24:31;;:17;;481:20431;;;;;;;;;;14895:17;:24;481:20431;-1:-1:-1;;;;;481:20431:31;;;14895:24;14789:252;481:20431;14933:17;;481:20431;;;;;;;;;;14933:17;:27;481:20431;14974:17;;481:20431;;;;;;;;;;14974:17;:22;14427:14;15010:17;;481:20431;;;;;;;;;;15010:17;:21;481:20431;;;;;;;14789:252;;;:::i;:::-;;;;481:20431;;;;;;;;;;15059:17;15052:24;:::i;:::-;481:20431;;717:4;481:20431;;;;;14466:175;14473:22;;481:20431;14473:34;:22;;;481:20431;;14427:14;481:20431;;;;;;;;14473:46;;;14535:12;;;:::i;:::-;14566:25;;;;;14562:69;;14466:175;;;14562:69;14611:5;;14473:46;;;;14274:95;481:20431;;-1:-1:-1;;;14305:53:31;;481:20431;;14305:53;;481:20431;;;;;;;;;;;;;;;;;;7549:43;1237:82;481:20431;1229:154;1268:51;481:20431;;;1292:22;;1237:10;;481:20431;;;1292:22;;;;;:::i;:::-;481:20431;1282:33;;1268:51;:::i;:::-;1237:82;;;;481:20431;;;;;;;;;;;;;;;;;;;717:4;;693:84;481:20431;;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;481:20431;929:152;;;:::i;:::-;10198:69;10206:11;:15;:11;;481:20431;;717:4;481:20431;;;;;;;10206:11;:15;481:20431;10206:23;10198:69;:::i;:::-;10306:11;481:20431;10306:11;;481:20431;;717:4;481:20431;;;;;;;;10337:21;-1:-1:-1;10368:220:31;717:4;;;10368:220;481:20431;10598:57;10624:31;10634:20;481:20431;;10634:20;:::i;:::-;10624:31;;:::i;:::-;481:20431;10598:57;;;:::i;:::-;481:20431;;10665:11;;;481:20431;;717:4;481:20431;;;;;;;10665:11;481:20431;:::i;:::-;10707:24;:11;;481:20431;;717:4;481:20431;;;;;;;10707:24;10744:17;-1:-1:-1;10790:24:31;;481:20431;;7233:15;481:20431;;;;;;;10790:24;481:20431;10832:167;717:4;;;10832:167;11009:78;11046:24;11009:34;481:20431;11046:41;11187:20;11046:24;11071:15;11046:24;;481:20431;;7233:15;481:20431;;;;;;;;11009:24;;;481:20431;;7233:15;481:20431;;;;;;;11009:78;11097:28;:24;;481:20431;;7233:15;481:20431;;;;;;;11097:28;11153:11;;481:20431;;717:4;481:20431;;;;;;;11153:11;:19;481:20431;;;11187:20;:::i;:::-;:25;11183:74;;10832:167;481:20431;11272:35;;-1:-1:-1;11272:35:31;;717:4;481:20431;;;;;11183:74;11228:18;11235:11;;481:20431;;717:4;481:20431;;;;;;;11235:11;11228:18;:::i;:::-;11183:74;;10832:167;10839:24;481:20431;10839:34;:24;;;481:20431;;7233:15;481:20431;;;;;;;;10839:42;;;10897:10;;;:::i;:::-;10926:23;;;;10922:67;;10832:167;;;10922:67;10969:5;;10368:220;10375:23;;;;;;:::i;:::-;481:20431;10375:35;;;10426:14;;;:::i;:::-;;;481:20431;;10459:32;10455:123;;10368:220;;;10455:123;10511:52;481:20431;;;10511:52;;;-1:-1:-1;;;10511:52:31;;;;481:20431;;;;;;;;;;;;;;;;;;;;;;;10375:35;;;;937:82;481:20431;929:152;968:51;481:20431;;;992:22;;937:10;;481:20431;;;992:22;;;;;:::i;968:51::-;937:82;;;;481:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;481:20431:31;;;;;8386:1560;481:20431;;;;;:::i;:::-;693:84;717:4;481:20431;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;481:20431;;8386:1560;:::i;:::-;481:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;5965:14;481:20431;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;5427:14;481:20431;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;481:20431:31;;;;;:::o;:::-;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;481:20431:31;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12737:22;481:20431;;;;;;;;;;;:::i;:::-;;;;;;12737:22;:::i;:::-;481:20431;;;;;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;481:20431:31;;3458:52;481:20431;;;;;;:::i;:::-;;693:84;717:4;481:20431;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;3458:52;-1:-1:-1;481:20431:31;3283:25;;:34;:25;;;;481:20431;;3283:11;481:20431;;;;;;;3283:25;481:20431;-1:-1:-1;;;;;481:20431:31;-1:-1:-1;;481:20431:31;;;;;;;3283:34;3327:25;717:4;3327:25;;481:20431;;3283:11;481:20431;;;;;;;3327:25;:31;481:20431;;3377:25;:30;:25;;481:20431;;3283:11;481:20431;;;;;;;3377:25;:30;481:20431;:::i;:::-;3425:17;-1:-1:-1;481:20431:31;3425:17;:::i;:::-;-1:-1:-1;481:20431:31;;;;;;;3458:52;;;;;:::i;:::-;;;;481:20431;;;3560:10;481:20431;3549:22;;;481:20431;;;3549:22;;-1:-1:-1;;;481:20431:31;3525:51;;481:20431;3549:22;;481:20431;3549:22;:::i;3525:51::-;3539:33;;;8486:12;;;;;:::i;:::-;;481:20431;;;;;;;;;;;;;3521:255;3663:4;3648:20;;:75;;;;3521:255;3644:132;;3521:255;3644:132;8486:12;;;:::i;:::-;;3521:255;;3648:75;481:20431;;;3560:10;481:20431;3696:22;;481:20431;;;3672:51;;-1:-1:-1;3696:22:31;481:20431;;3696:22;;3560:10;481:20431;;;;3696:22;;;;;;;;;:::i;:::-;481:20431;3686:33;;3672:51;:::i;:::-;3648:75;;;481:20431;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;-1:-1:-1;;;;;481:20431:31;;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;481:20431:31;;2317:34;481:20431;;20113:12;481:20431;20205:4;;;;481:20431;;20112:13;:33;;;;481:20431;20104:76;;;:::i;:::-;20190:19;20205:4;481:20431;;20113:12;481:20431;;;20113:12;481:20431;;20190:19;20219;481:20431;;;20113:12;481:20431;;;20113:12;481:20431;;20219:19;481:20431;;20274:32;;;481:20431;20274:32;;;;481:20431;;;-1:-1:-1;;;;;481:20431:31;;;;;;;;20274:32;;481:20431;;20274:32;;;;;;:::i;:::-;481:20431;20264:43;;20317:11;:15;:11;;481:20431;;717:4;481:20431;;;;;;;20317:11;:15;481:20431;;;;:::i;:::-;;;;20349:11;;481:20431;;717:4;481:20431;;;;;;;20349:11;481:20431;:::i;:::-;20385:23;:11;;;481:20431;;717:4;481:20431;;;;;;;20385:11;:19;20205:4;481:20431;;;20385:23;20205:4;481:20431;;20317:15;481:20431;;20418:28;:17;481:20431;7639:35;:::i;20418:28::-;20461:20;-1:-1:-1;20461:20:31;;481:20431;20112:33;-1:-1:-1;20753:4:31;20844:36;20896:7;20112:33;;481:20431;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20431:31;;;;;;;-1:-1:-1;481:20431:31;;;;;-1:-1:-1;481:20431:31;;;;;16503:24;481:20431;16503:24;;;481:20431;16537:24;481:20431;16640:21;:17;-1:-1:-1;;;;;16537:24:31;;;481:20431;;16640:17;481:20431;;;;;;;;;;16640:17;:21;481:20431;;;16571:27;481:20431;16571:27;481:20431;16571:27;481:20431;16571:27;;481:20431;:::i;:::-;;;;:::i;:::-;;;;16608:22;;;;;481:20431;:::i;:::-;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20431:31;;;;;;-1:-1:-1;481:20431:31;4897:5;481:20431;;;;;-1:-1:-1;481:20431:31;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;-1:-1:-1;481:20431:31;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;658:137;8386:1560;658:137;693:84;717:4;481:20431;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;8386:1560;:::i;481:20431::-;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;481:20431:31;;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;-1:-1:-1;;;481:20431:31;;;;;;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;481:20431:31;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;481:20431:31;;;;-1:-1:-1;481:20431:31;;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8386:1560::-;8514:73;8528:15;481:20431;8522:21;;8514:73;:::i;:::-;8597:63;8605:26;8606:25;:11;:16;;481:20431;;3283:11;481:20431;;;;;;;8606:16;:25;481:20431;;;;;;;8606:25;8605:26;;481:20431;8605:26;8597:63;:::i;:::-;8674:19;:16;;481:20431;;3283:11;481:20431;;;;;;;8674:16;481:20431;-1:-1:-1;;;;;481:20431:31;;;8674:19;-1:-1:-1;;;;;481:20431:31;;;;8705:4;8674:36;8705:4;;481:20431;;;8769:10;8758:22;;;481:20431;;;8726:99;;8734:51;;481:20431;8758:22;;481:20431;;;;8758:22;481:20431;8734:51;8726:99;:::i;:::-;481:20431;8985:23;481:20431;;8985:23;;;481:20431;717:4;481:20431;;;;;;8985:23;;;;9055:32;8606:11;9055:16;;481:20431;;3283:11;481:20431;;;;;;;9055:16;:25;481:20431;;-1:-1:-1;;481:20431:31;9035:4;481:20431;;;;9055:32;8528:15;9178:16;:19;:16;;481:20431;;3283:11;481:20431;;;;;;;9178:19;481:20431;717:4;9210:16;;481:20431;;3283:11;481:20431;;;;;;;9210:16;:22;481:20431;9235:21;:16;;481:20431;;3283:11;481:20431;;;;;;;9235:16;:21;481:20431;;;;;;;:::i;:::-;9178:79;;;;;;:::i;:::-;-1:-1:-1;9272:572:31;;;9303:32;8606:11;9303:16;;481:20431;;3283:11;481:20431;;;;;;;9303:16;:25;481:20431;;-1:-1:-1;;481:20431:31;;;;;;9303:32;9414:19;:16;;481:20431;;3283:11;481:20431;;;;;;;9414:19;9455:16;9359:179;717:4;9455:16;;481:20431;;3283:11;481:20431;;;;;;;9455:16;:22;481:20431;9499:16;9235:21;9499:16;;481:20431;;3283:11;481:20431;;;;;;;9499:16;:21;481:20431;9359:179;481:20431;;;;;;9359:179;;;:::i;:::-;;;;717:4;9557:11;:::o;9272:572::-;9674:19;:16;;481:20431;;3283:11;481:20431;;;;;;;9674:19;9715:16;9612:186;717:4;9715:16;;481:20431;;3283:11;481:20431;;;;;;;9715:16;:22;481:20431;9759:16;9235:21;9759:16;;481:20431;;3283:11;481:20431;;;;;;;9759:16;:21;481:20431;9612:186;481:20431;;;;;;9612:186;;;:::i;:::-;;;;8528:15;9817:12;:::o;8671:299::-;481:20431;;;8907:10;8896:22;;;481:20431;;;8864:95;;8872:51;;481:20431;8896:22;;481:20431;;;;8896:22;481:20431;8872:51;8864:95;:::i;:::-;8671:299;;8386:1560;8514:73;8528:15;481:20431;8522:21;;8514:73;:::i;:::-;8597:63;8605:26;8606:25;:11;:16;;481:20431;;3283:11;481:20431;;;;;;;8597:63;9035:4;8674:19;:16;;481:20431;;3283:11;481:20431;;;;;;;8674:19;-1:-1:-1;;;;;481:20431:31;;;;8705:4;8674:36;8705:4;;481:20431;;;8769:10;8758:22;;;481:20431;;;8726:99;;8734:51;;481:20431;8758:22;;481:20431;;;;8758:22;481:20431;8726:99;481:20431;;;;;;;;;8985:23;;481:20431;;8985:23;481:20431;;9023:16;9035:4;;9055:32;8606:11;9055:16;;481:20431;;3283:11;481:20431;;;;;;;9019:899;9874:33;:16;;;8606:11;9874:16;481:20431;;3283:11;481:20431;;;;;;;9874:16;:25;481:20431;;-1:-1:-1;;481:20431:31;;;;9874:33;8528:15;8386:1560;:::o;8671:299::-;481:20431;;;8907:10;8896:22;;;481:20431;;;8864:95;;8872:51;;481:20431;8896:22;;481:20431;;;;8896:22;481:20431;8864:95;8671:299;;481:20431;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;-1:-1:-1;481:20431:31;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20431:31;;;-1:-1:-1;481:20431:31;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;481:20431:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;658:137;;;;;;693:84;717:4;481:20431;701:12;481:20431;;;;;;701:20;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;658:137;1229:154;;;:::i;:::-;-1:-1:-1;;;;;481:20431:31;;1259:4;;12779:24;;12775:168;;658:137;481:20431;;;-1:-1:-1;;;;;481:20431:31;;12981:27;;;481:20431;;;;;;;;;12981:27;481:20431;;;;12981:27;481:20431;12981:27;481:20431;12971:38;;13019:16;;;;;;481:20431;;;;;;;;;;13019:16;481:20431;13060:16;717:4;13060:16;;481:20431;;;;;;;;;;13060:16;:23;481:20431;;13103:16;:26;:16;;481:20431;;;;;;;;;;;;13152:16;13019:7;13152:16;;481:20431;;;;;;;;;;;;13191:16;:20;:16;;481:20431;;;;;;;;;;;13233:16;:34;:23;;:16;;481:20431;;;;;;;;;;13233:23;-1:-1:-1;;;;;481:20431:31;;;13233:34;;;;13283:22;13386:70;13283:22;13333:33;13386:70;13283:22;:36;:22;;;481:20431;;14427:14;481:20431;;;;;;;13283:36;13233:23;13333:16;;481:20431;;;;;;;;;;13333:16;:23;481:20431;-1:-1:-1;;;;;481:20431:31;-1:-1:-1;;481:20431:31;;;;;;;13333:33;481:20431;;13386:70;;;;;:::i;:::-;;;;658:137;:::o;13229:354::-;481:20431;13500:72;481:20431;13500:72;481:20431;;;13500:72;;;;;:::i;12775:168::-;481:20431;;;12827:87;;;1259:4;;12827:87;1259:4;;;;12827:87;;;;:::i;:::-;;;;;;;;;;12819:113;12827:87;481:20431;12827:87;;;12775:168;12819:113;;:::i;:::-;12775:168;;12827:87;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1237:82::-;481:20431;1229:154;1268:51;481:20431;;1292:22;;;1237:10;;481:20431;;1292:22;;;;;;:::i;1268:51::-;1237:82;;;;481:20431;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;481:20431:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;481:20431:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;16826:463::-;-1:-1:-1;481:20431:31;717:4;481:20431;;;;-1:-1:-1;481:20431:31;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16995:12;16991:30;;-1:-1:-1;;17037:24:31;717:4;;;17032:228;17270:12;;;-1:-1:-1;16826:463:31;:::o;17102:17::-;17081:12;;481:20431;;;17063:37;;;;;17153:29;;;;;;:::i;:::-;481:20431;17201:12;:35;;;;17102:17;17197:52;;17102:17;;;:::i;:::-;17037:24;;;17197:52;17238:11;;;;:::o;17201:35::-;;;17063:37;;;;16991:30;17009:12;;-1:-1:-1;17009:12:31;:::o;16826:463::-;-1:-1:-1;481:20431:31;16970:5;481:20431;;;;-1:-1:-1;481:20431:31;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16995:12;16991:30;;-1:-1:-1;;17037:24:31;16970:5;;;17270:12;;;-1:-1:-1;16826:463:31;:::o;17102:17::-;17081:12;;481:20431;;;17063:37;;;;;17153:29;;;;;:::i;:::-;481:20431;17201:12;;;:35;;;;;17102:17;17197:52;;;17102:17;;;:::i;:::-;17037:24;;;17201:35;1317:1;17217:19;;;17201:35;;;16826:463;-1:-1:-1;481:20431:31;16970:5;481:20431;;;;-1:-1:-1;481:20431:31;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;3377:30;481:20431;;;;;;;;;16995:12;16991:30;;-1:-1:-1;;17037:24:31;16970:5;;;17032:228;17270:12;;;;-1:-1:-1;16826:463:31;:::o;17102:17::-;17081:12;;481:20431;;;17063:37;;;;;17153:29;;;;;:::i;:::-;481:20431;17201:12;;;;:35;;;;;17102:17;17197:52;;;;17102:17;;;:::i;:::-;17037:24;;;17197:52;17238:11;;;;;:::o;17201:35::-;17217:19;;-1:-1:-1;17201:35:31;;;;17063:37;;;;16826:463;-1:-1:-1;481:20431:31;16970:5;481:20431;;;;;-1:-1:-1;481:20431:31;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16995:12;16991:30;;-1:-1:-1;;17037:24:31;16970:5;;;17270:12;;;;-1:-1:-1;16826:463:31;:::o;17102:17::-;17081:12;;481:20431;;;17063:37;;;;;17153:29;;;;;:::i;:::-;481:20431;17201:12;;;;:35;;;;;17102:17;17197:52;;;;17102:17;;;:::i;:::-;17037:24;;;17201:35;17217:19;;-1:-1:-1;17201:35:31;;;;17866:934;;18705:28;17866:934;;18411:38;17866:934;481:20431;;;18101:39;;;-1:-1:-1;;;;;18101:39:31;;;481:20431;;;;;;;;;;;;;;;;;;:::i;:::-;18101:39;481:20431;18101:39;481:20431;;18101:39;;;;;;;;:::i;:::-;481:20431;18091:50;;481:20431;;18275:62;;;18101:39;18275:62;;;;481:20431;;;;;;;;;;;;18275:62;;;;;;;;;:::i;:::-;481:20431;18265:73;;18411:38;;:::i;:::-;481:20431;;;-1:-1:-1;;;;;481:20431:31;;;18101:39;18533:21;;481:20431;;;18533:21;;;481:20431;;;;18533:21;481:20431;18705:28;18701:70;;-1:-1:-1;17866:934:31;:::o;18701:70::-;18756:4;18749:11;:::o;19051:719::-;;-1:-1:-1;19292:2:31;481:20431;;19278:16;19274:64;;19460:143;;;;;;;;;;;;;;;19622:2;19617:7;;19613:46;;19051:719;481:20431;19460:143;481:20431;;;;-1:-1:-1;481:20431:31;19460:143;481:20431;;;;;;;;;19460:143;481:20431;;;19460:143;481:20431;;;19696:31;;;;;;;;;-1:-1:-1;19696:31:31;19051:719;:::o;19613:46::-;19622:2;481:20431;;;;;;;;;;;19613:46;19640:8;19613:46;;19274:64;19310:17;;;;:::o;481:20431::-;;;;:::o;:::-;;;;-1:-1:-1;;;481:20431:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"addClaim(uint256,uint256,address,bytes,bytes,string)":"b1a34e0d","addKey(bytes32,uint256,uint256)":"1d381240","approve(uint256,bool)":"747442d3","execute(address,uint256,bytes)":"b61d27f6","getClaim(bytes32)":"c9100bcb","getClaimIdsByTopic(uint256)":"80e9e9e1","getKey(bytes32)":"12aaac70","getKeyPurposes(bytes32)":"fb307b34","getKeysByPurpose(uint256)":"9010f726","getRecoveredAddress(bytes,bytes32)":"c3b129e3","initialize(address)":"c4d66de8","isClaimValid(address,uint256,bytes,bytes)":"c0969a6e","keyHasPurpose(bytes32,uint256)":"d202158d","removeClaim(bytes32)":"4eee424a","removeKey(bytes32,uint256)":"53d413c5","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLibrary\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC734` \\\"KeyHolder\\\" and the `IERC735` \\\"ClaimHolder\\\" interfaces into a common Identity Contract. This implementation has a separate contract were it declares all storage, allowing for it to be used as an upgradable logic contract.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"See {IERC735-addClaim}.\",\"params\":{\"_data\":\"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\",\"_issuer\":\"The issuers identity contract address, or the address used to sign the above signature.\",\"_scheme\":\"The scheme with which this claim SHOULD be verified or how it should be processed.\",\"_signature\":\"Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\",\"_topic\":\"The type of claim\",\"_uri\":\"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\"},\"returns\":{\"claimRequestId\":\"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event.\"}},\"addKey(bytes32,uint256,uint256)\":{\"params\":{\"_key\":\"keccak256 representation of an ethereum address\",\"_purpose\":\"a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\",\"_type\":\"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\"},\"returns\":{\"success\":\"Returns TRUE if the addition was successful and FALSE if not\"}},\"approve(uint256,bool)\":{\"details\":\"See {IERC734-approve}.\"},\"constructor\":{\"params\":{\"_isLibrary\":\"boolean value stating if the contract is library or not calls __Identity_init if contract is not library\",\"initialManagementKey\":\"the address of the management key at deployment\"}},\"execute(address,uint256,bytes)\":{\"details\":\"See {IERC734-execute}.\",\"returns\":{\"executionId\":\"to use in the approve function, to approve or reject this execution.\"}},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"data\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"issuer\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"scheme\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"signature\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"topic\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"uri\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\"}},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}.\",\"params\":{\"_topic\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"claimIds\":\"Returns an array of claim IDs by topic.\"}},\"getKey(bytes32)\":{\"details\":\"See {IERC734-getKey}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"key\":\"Returns the full key data, if present in the identity.\",\"keyType\":\"Returns the full key data, if present in the identity.\",\"purposes\":\"Returns the full key data, if present in the identity.\"}},\"getKeyPurposes(bytes32)\":{\"details\":\"See {IERC734-getKeyPurposes}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"_purposes\":\"Returns the purposes of the specified key\"}},\"getKeysByPurpose(uint256)\":{\"details\":\"See {IERC734-getKeysByPurpose}.\",\"params\":{\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\"},\"returns\":{\"keys\":\"Returns an array of public key bytes32 hold by this identity and having the specified purpose\"}},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"initialize(address)\":{\"params\":{\"initialManagementKey\":\"The ethereum address to be set as the management key of the ONCHAINID.\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"claimValid\":\"true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"See {IERC734-keyHasPurpose}.\"},\"removeClaim(bytes32)\":{\"details\":\"See {IERC735-removeClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"success\":\"Returns TRUE when the claim was removed. triggers ClaimRemoved event\"}},\"removeKey(bytes32,uint256)\":{\"details\":\"See {IERC734-removeKey}.\"},\"version()\":{\"details\":\"Returns the string of the current version.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"notice\":\"Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key.\"},\"addKey(bytes32,uint256,uint256)\":{\"notice\":\"implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"notice\":\"Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key.\"},\"constructor\":{\"notice\":\"constructor of the Identity contract\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method.\"},\"getClaim(bytes32)\":{\"notice\":\"Implementation of the getClaim function from the ERC-735 standard.\"},\"getClaimIdsByTopic(uint256)\":{\"notice\":\"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic\"},\"getKey(bytes32)\":{\"notice\":\"Implementation of the getKey function from the ERC-734 standard\"},\"getKeyPurposes(bytes32)\":{\"notice\":\"gets the purposes of a key\"},\"getKeysByPurpose(uint256)\":{\"notice\":\"gets all the keys with a specific purpose from an identity\"},\"initialize(address)\":{\"notice\":\"When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\"},\"keyHasPurpose(bytes32,uint256)\":{\"notice\":\"Returns true if the key has MANAGEMENT purpose or the specified purpose.\"},\"removeClaim(bytes32)\":{\"notice\":\"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself.\"},\"removeKey(bytes32,uint256)\":{\"notice\":\"Remove the purpose from a key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/onchain-id-solidity/contracts/Identity.sol\":\"Identity\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@onchain-id/solidity/contracts/=lib/onchain-id-solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":onchain-id-solidity/=lib/onchain-id-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity/=lib/solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/onchain-id-solidity/contracts/Identity.sol\":{\"keccak256\":\"0x9da2ac61454d3c68b20eb7abb952fe0ab72c3c0f3eddb0d1c33daffbf4082319\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6c222c596c93de3d9e8bb4c2efadd0fe7210dc8986327bfe9ec8ed757e59521\",\"dweb:/ipfs/QmVkyVm4rLFEF9Le6AERskXMWAhzgsAjJdjHLLySQ3ECgP\"]},\"lib/onchain-id-solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3d1aa644ee16edee30a1e5b3a8c2388e99a6b4d46fadf7fea0c377529c3f03a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3714bbd6e289bdd2a61074bad5b6841bbab2f1bbcb4f461d41210cec8811ae\",\"dweb:/ipfs/QmNTvHAANFjFxzZs6uTniiNW5cJSADKh37g8gaCnujNope\"]},\"lib/onchain-id-solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]},\"lib/onchain-id-solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]},\"lib/onchain-id-solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264\",\"dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo\"]},\"lib/onchain-id-solidity/contracts/storage/Storage.sol\":{\"keccak256\":\"0x8cc9c1d7c00214df76680b475b99c0f296c6e876d9a3a701e0e4074ea1160571\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://707ecf18de2c2d6da9f5827e2416934de65fae4109369ca8743b2e469661b094\",\"dweb:/ipfs/QmcRV2o4BRvDAHDaG7hjZtHB2WjxBPL1zkfZq7hwpbAYZG\"]},\"lib/onchain-id-solidity/contracts/storage/Structs.sol\":{\"keccak256\":\"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c\",\"dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV\"]},\"lib/onchain-id-solidity/contracts/version/Version.sol\":{\"keccak256\":\"0x9edca39fb2e35af59f82ce30de0f2b7727e0a2df9cf9b703288db868ea4e8405\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf16acdc9fbada3d392c243f3ded28d654084f2c367c7103b1769f0ee0a7b1a4\",\"dweb:/ipfs/QmeVUtHa9LGdiaxKav6swxHuWTYLhz3FXbQfY4wUMUKd97\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"initialManagementKey","type":"address"},{"internalType":"bool","name":"_isLibrary","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"executionId","type":"uint256","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"Approved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"claimId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"topic","type":"uint256","indexed":true},{"internalType":"uint256","name":"scheme","type":"uint256","indexed":false},{"internalType":"address","name":"issuer","type":"address","indexed":true},{"internalType":"bytes","name":"signature","type":"bytes","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"string","name":"uri","type":"string","indexed":false}],"type":"event","name":"ClaimAdded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"claimId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"topic","type":"uint256","indexed":true},{"internalType":"uint256","name":"scheme","type":"uint256","indexed":false},{"internalType":"address","name":"issuer","type":"address","indexed":true},{"internalType":"bytes","name":"signature","type":"bytes","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"string","name":"uri","type":"string","indexed":false}],"type":"event","name":"ClaimChanged","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"claimId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"topic","type":"uint256","indexed":true},{"internalType":"uint256","name":"scheme","type":"uint256","indexed":false},{"internalType":"address","name":"issuer","type":"address","indexed":true},{"internalType":"bytes","name":"signature","type":"bytes","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"string","name":"uri","type":"string","indexed":false}],"type":"event","name":"ClaimRemoved","anonymous":false},{"inputs":[{"internalType":"uint256","name":"executionId","type":"uint256","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"Executed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"executionId","type":"uint256","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"ExecutionFailed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"executionId","type":"uint256","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"ExecutionRequested","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32","indexed":true},{"internalType":"uint256","name":"purpose","type":"uint256","indexed":true},{"internalType":"uint256","name":"keyType","type":"uint256","indexed":true}],"type":"event","name":"KeyAdded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32","indexed":true},{"internalType":"uint256","name":"purpose","type":"uint256","indexed":true},{"internalType":"uint256","name":"keyType","type":"uint256","indexed":true}],"type":"event","name":"KeyRemoved","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"},{"internalType":"uint256","name":"_scheme","type":"uint256"},{"internalType":"address","name":"_issuer","type":"address"},{"internalType":"bytes","name":"_signature","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"addClaim","outputs":[{"internalType":"bytes32","name":"claimRequestId","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"},{"internalType":"uint256","name":"_type","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_approve","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"execute","outputs":[{"internalType":"uint256","name":"executionId","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getClaim","outputs":[{"internalType":"uint256","name":"topic","type":"uint256"},{"internalType":"uint256","name":"scheme","type":"uint256"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"uri","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"_topic","type":"uint256"}],"stateMutability":"view","type":"function","name":"getClaimIdsByTopic","outputs":[{"internalType":"bytes32[]","name":"claimIds","type":"bytes32[]"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getKey","outputs":[{"internalType":"uint256[]","name":"purposes","type":"uint256[]"},{"internalType":"uint256","name":"keyType","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getKeyPurposes","outputs":[{"internalType":"uint256[]","name":"_purposes","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"_purpose","type":"uint256"}],"stateMutability":"view","type":"function","name":"getKeysByPurpose","outputs":[{"internalType":"bytes32[]","name":"keys","type":"bytes32[]"}]},{"inputs":[{"internalType":"bytes","name":"sig","type":"bytes"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"getRecoveredAddress","outputs":[{"internalType":"address","name":"addr","type":"address"}]},{"inputs":[{"internalType":"address","name":"initialManagementKey","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"contract IIdentity","name":"_identity","type":"address"},{"internalType":"uint256","name":"claimTopic","type":"uint256"},{"internalType":"bytes","name":"sig","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"isClaimValid","outputs":[{"internalType":"bool","name":"claimValid","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"stateMutability":"view","type":"function","name":"keyHasPurpose","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"_claimId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"removeClaim","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"uint256","name":"_purpose","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeKey","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"details":"See {IERC735-addClaim}.","params":{"_data":"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.","_issuer":"The issuers identity contract address, or the address used to sign the above signature.","_scheme":"The scheme with which this claim SHOULD be verified or how it should be processed.","_signature":"Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))","_topic":"The type of claim","_uri":"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such."},"returns":{"claimRequestId":"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event."}},"addKey(bytes32,uint256,uint256)":{"params":{"_key":"keccak256 representation of an ethereum address","_purpose":"a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION","_type":"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc."},"returns":{"success":"Returns TRUE if the addition was successful and FALSE if not"}},"approve(uint256,bool)":{"details":"See {IERC734-approve}."},"constructor":{"params":{"_isLibrary":"boolean value stating if the contract is library or not calls __Identity_init if contract is not library","initialManagementKey":"the address of the management key at deployment"}},"execute(address,uint256,bytes)":{"details":"See {IERC734-execute}.","returns":{"executionId":"to use in the approve function, to approve or reject this execution."}},"getClaim(bytes32)":{"details":"See {IERC735-getClaim}.","params":{"_claimId":"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))"},"returns":{"data":"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .","issuer":"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .","scheme":"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .","signature":"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .","topic":"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .","uri":"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) ."}},"getClaimIdsByTopic(uint256)":{"details":"See {IERC735-getClaimIdsByTopic}.","params":{"_topic":"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))"},"returns":{"claimIds":"Returns an array of claim IDs by topic."}},"getKey(bytes32)":{"details":"See {IERC734-getKey}.","params":{"_key":"The public key.  for non-hex and long keys, its the Keccak256 hash of the key"},"returns":{"key":"Returns the full key data, if present in the identity.","keyType":"Returns the full key data, if present in the identity.","purposes":"Returns the full key data, if present in the identity."}},"getKeyPurposes(bytes32)":{"details":"See {IERC734-getKeyPurposes}.","params":{"_key":"The public key.  for non-hex and long keys, its the Keccak256 hash of the key"},"returns":{"_purposes":"Returns the purposes of the specified key"}},"getKeysByPurpose(uint256)":{"details":"See {IERC734-getKeysByPurpose}.","params":{"_purpose":"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION"},"returns":{"keys":"Returns an array of public key bytes32 hold by this identity and having the specified purpose"}},"getRecoveredAddress(bytes,bytes32)":{"details":"returns the address that signed the given data","params":{"dataHash":"the data that was signed returns the address that signed dataHash and created the signature sig","sig":"the signature of the data"}},"initialize(address)":{"params":{"initialManagementKey":"The ethereum address to be set as the management key of the ONCHAINID."}},"isClaimValid(address,uint256,bytes,bytes)":{"details":"Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.","params":{"_identity":"the identity contract related to the claim","claimTopic":"the claim topic of the claim","data":"the data field of the claim","sig":"the signature of the claim"},"returns":{"claimValid":"true if the claim is valid, false otherwise"}},"keyHasPurpose(bytes32,uint256)":{"details":"See {IERC734-keyHasPurpose}."},"removeClaim(bytes32)":{"details":"See {IERC735-removeClaim}.","params":{"_claimId":"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))"},"returns":{"success":"Returns TRUE when the claim was removed. triggers ClaimRemoved event"}},"removeKey(bytes32,uint256)":{"details":"See {IERC734-removeKey}."},"version()":{"details":"Returns the string of the current version."}},"version":1},"userdoc":{"kind":"user","methods":{"addClaim(uint256,uint256,address,bytes,bytes,string)":{"notice":"Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key."},"addKey(bytes32,uint256,uint256)":{"notice":"implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval."},"approve(uint256,bool)":{"notice":"Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key."},"constructor":{"notice":"constructor of the Identity contract"},"execute(address,uint256,bytes)":{"notice":"Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method."},"getClaim(bytes32)":{"notice":"Implementation of the getClaim function from the ERC-735 standard."},"getClaimIdsByTopic(uint256)":{"notice":"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic"},"getKey(bytes32)":{"notice":"Implementation of the getKey function from the ERC-734 standard"},"getKeyPurposes(bytes32)":{"notice":"gets the purposes of a key"},"getKeysByPurpose(uint256)":{"notice":"gets all the keys with a specific purpose from an identity"},"initialize(address)":{"notice":"When using this contract as an implementation for a proxy, call this initializer with a delegatecall."},"keyHasPurpose(bytes32,uint256)":{"notice":"Returns true if the key has MANAGEMENT purpose or the specified purpose."},"removeClaim(bytes32)":{"notice":"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself."},"removeKey(bytes32,uint256)":{"notice":"Remove the purpose from a key."}},"version":1}},"settings":{"remappings":["@onchain-id/solidity/contracts/=lib/onchain-id-solidity/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ERC-3643/=lib/ERC-3643/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","onchain-id-solidity/=lib/onchain-id-solidity/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solidity/=lib/solidity/contracts/"],"optimizer":{"enabled":true,"runs":1000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/onchain-id-solidity/contracts/Identity.sol":"Identity"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/onchain-id-solidity/contracts/Identity.sol":{"keccak256":"0x9da2ac61454d3c68b20eb7abb952fe0ab72c3c0f3eddb0d1c33daffbf4082319","urls":["bzz-raw://d6c222c596c93de3d9e8bb4c2efadd0fe7210dc8986327bfe9ec8ed757e59521","dweb:/ipfs/QmVkyVm4rLFEF9Le6AERskXMWAhzgsAjJdjHLLySQ3ECgP"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/interface/IClaimIssuer.sol":{"keccak256":"0x3d1aa644ee16edee30a1e5b3a8c2388e99a6b4d46fadf7fea0c377529c3f03a3","urls":["bzz-raw://ce3714bbd6e289bdd2a61074bad5b6841bbab2f1bbcb4f461d41210cec8811ae","dweb:/ipfs/QmNTvHAANFjFxzZs6uTniiNW5cJSADKh37g8gaCnujNope"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/interface/IERC734.sol":{"keccak256":"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55","urls":["bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f","dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/interface/IERC735.sol":{"keccak256":"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa","urls":["bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97","dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/interface/IIdentity.sol":{"keccak256":"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186","urls":["bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264","dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/storage/Storage.sol":{"keccak256":"0x8cc9c1d7c00214df76680b475b99c0f296c6e876d9a3a701e0e4074ea1160571","urls":["bzz-raw://707ecf18de2c2d6da9f5827e2416934de65fae4109369ca8743b2e469661b094","dweb:/ipfs/QmcRV2o4BRvDAHDaG7hjZtHB2WjxBPL1zkfZq7hwpbAYZG"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/storage/Structs.sol":{"keccak256":"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32","urls":["bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c","dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV"],"license":"GPL-3.0"},"lib/onchain-id-solidity/contracts/version/Version.sol":{"keccak256":"0x9edca39fb2e35af59f82ce30de0f2b7727e0a2df9cf9b703288db868ea4e8405","urls":["bzz-raw://bf16acdc9fbada3d392c243f3ded28d654084f2c367c7103b1769f0ee0a7b1a4","dweb:/ipfs/QmeVUtHa9LGdiaxKav6swxHuWTYLhz3FXbQfY4wUMUKd97"],"license":"GPL-3.0"}},"version":1},"id":31}